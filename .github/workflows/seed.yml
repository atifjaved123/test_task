name: seed
on: [push]

jobs:
  run:
    name: Run Seed
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    container:
      image: ruby:3.2.2
      env:
        RAILS_ENV: development
        POSTGRES_HOST: db
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: ci_db_test
        POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
        APP_TYPE: campaign
        SHOPIFY_API_KEY: SAMPLE
        SHOPIFY_API_SECRET: SAMPLE

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: cache bundle gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      # SEE: https://stackoverflow.com/questions/61010294/how-to-cache-yarn-packages-in-github-actions
      - name: Install yarn
        run: npm install -g yarn

      - name: Install project dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true' # Over here!
        run: yarn
      # ---

      - name: install bundler
        run: gem install bundler --no-document -v $(grep "BUNDLED WITH" -1 Gemfile.lock | tail -n 1)
      - name: bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: db setup
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:setup
      - name: run assets:precompile
        run: |
          bundle exec rake assets:precompile
      - name: run seed
        run: bundle exec rails db:seed
